local playerName = game:GetService("Players").LocalPlayer.Name;
local whitelistedNames = {
["Qoucx"] = true;
["Tyronethetird342"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
["Qoucx"] = true;
}
if not (whitelistedNames[playerName]) then
game:GetService("Players").LocalPlayer:Kick("You are not whitelisted!")
end

--// Detects when someone executes 

local webhookcheck =
is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
secure_load and "Sentinel" or
KRNL_LOADED and "Krnl" or
SONA_LOADED and "Sona" or
"Unkown Executor Or Crap Exploit"

local url =
"https://discord.com/api/webhooks/921819670837874730/DrlqI4E-HJ1ZiHoVBMf7AJ7gVfVvWe9mWcgd4A49a9rvWSBlrV9vToLTWwk4slmJw2tJ"
local data = {
["content"] = "-",
["embeds"] = {
	{
		["title"] = "**Someone Executed Your Script!**",
		["description"] = "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."**",
		["type"] = "rich",
		["color"] = tonumber(0x7269da),
		["image"] = {
			["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
				tostring(game:GetService("Players").LocalPlayer.Name)
		}
	}
}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
--// Detects when someone executes 

local webhookcheck =
is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
secure_load and "Sentinel" or
KRNL_LOADED and "Krnl" or
SONA_LOADED and "Sona" or
"Unkown Executor Or Crap Exploit"

local url =
"https://discord.com/api/webhooks/901861795793367081/yUCQ-YeTtpqXpShCK2lbtXV1sdDtvlXiJOqGabORYAIuTiP2KnQ8rZMcjLbXahJzFdMk"
local data = {
["content"] = "-",
["embeds"] = {
	{
		["title"] = "**Someone Executed Your Script!**",
		["description"] = "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."**",
		["type"] = "rich",
		["color"] = tonumber(0x7269da),
		["image"] = {
			["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
				tostring(game:GetService("Players").LocalPlayer.Name)
		}
	}
}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

local rconsoleprint = rconsoleprint;
local rconsolename = rconsolename;
local math_random = math.random;
local coroutine_wrap = coroutine.wrap;
local task_wait = task.wait;
local warn = warn;

local code_count = 100000;
local characters_list = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"};
local character_list_length = #characters_list;

local redeem_remote = workspace.__THINGS.__REMOTES:WaitForChild("redeem merch code");

if not isfile("working_codes.txt") then
   writefile("working_codes.txt", "");
end;

function generate_random_code()
  local code_string = "";
 
  for index = 1, 10 do
      code_string = code_string .. characters_list[math_random(1, character_list_length)];
  end;
 
  return "pet-" .. code_string;
end;

local checked_amount = 0;
local working_amount = 0;

local function output_debug_data()
   rconsolename("Huge Cat Generator Made By Model and Sync | Checked: " .. checked_amount .. "/" .. code_count .. " | Working: " .. working_amount);
end;

output_debug_data();

for index = 1, code_count do
   local random_code = generate_random_code();
   local code_redeem = redeem_remote:InvokeServer({random_code});
   local response_status = code_redeem[1];
   local response_message = code_redeem[2];
   
   warn(response_message); -- if you remove the wait(3) at the end of the loop, this will be "You are trying this too much"
   
   checked_amount = checked_amount + 1;
 
   if not response_status then
       rconsoleprint("@@RED@@");
       rconsoleprint("[NOT WORKING] ");
       rconsoleprint("@@WHITE@@");
       rconsoleprint(random_code .. "\n");
     
       output_debug_data();
   else
       working_amount = working_amount + 1;
     
       rconsoleprint("@@LIGHT_GREEN@@");
       rconsoleprint("[WORKING] ");
       rconsoleprint("@@WHITE@@");
       rconsoleprint(random_code .. "\n");
     
       appendfile("working codes.txt", random_code .. "\n");
     
       output_debug_data();
   end;
   
   wait(3);
end;
